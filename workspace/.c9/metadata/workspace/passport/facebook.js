{"changed":true,"filter":false,"title":"facebook.js","tooltip":"/passport/facebook.js","value":"var FacebookStrategy = require('passport-facebook').Strategy;\nvar User = require('../../models/fbUser');\nvar fbConfig = require('../../models/fb.js');\n\nmodule.exports = function(passport) {\n\n    passport.use('facebook', new FacebookStrategy({\n        clientID        : fbConfig.appID,\n        clientSecret    : fbConfig.appSecret,\n        callbackURL     : fbConfig.callbackUrl\n    },\n\n    // facebook will send back the tokens and profile\n    function(access_token, refresh_token, profile, done) {\n\n    \tconsole.log('profile', profile);\n\n\t\t// asynchronous\n\t\tprocess.nextTick(function() {\n\n\t\t\t// find the user in the database based on their facebook id\n\t        User.findOne({ 'id' : profile.id }, function(err, user) {\n\n\t        \t// if there is an error, stop everything and return that\n\t        \t// ie an error connecting to the database\n\t            if (err)\n\t                return done(err);\n\n\t\t\t\t// if the user is found, then log them in\n\t            if (user) {\n\t                return done(null, user); // user found, return that user\n\t            } else {\n\t                // if there is no user found with that facebook id, create them\n\t                var newUser = new User();\n\n\t\t\t\t\t// set all of the facebook information in our user model\n\t                newUser.id    = profile.id; // set the users facebook id\t                \n\t                newUser.access_token = access_token; // we will save the token that facebook provides to the user\t                \n\t                newUser.firstName  = profile.name.givenName;\n\t                newUser.lastName = profile.name.familyName; // look at the passport user profile to see how names are returned\n\t                newUser.email = profile.emails[0].value; // facebook can return multiple emails so we'll take the first\n\n\t\t\t\t\t// save our user to the database\n\t                newUser.save(function(err) {\n\t                    if (err)\n\t                        throw err;\n\n\t                    // if successful, return the new user\n\t                    return done(null, newUser);\n\t                });\n\t            }\n\n\t        });\n        });\n\n    }));\n\n};","undoManager":{"mark":26,"position":34,"stack":[[{"start":{"row":0,"column":0},"end":{"row":57,"column":2},"action":"insert","lines":["var FacebookStrategy = require('passport-facebook').Strategy;","var User = require('../models/user');","var fbConfig = require('../fb.js');","","module.exports = function(passport) {","","    passport.use('facebook', new FacebookStrategy({","        clientID        : fbConfig.appID,","        clientSecret    : fbConfig.appSecret,","        callbackURL     : fbConfig.callbackUrl","    },","","    // facebook will send back the tokens and profile","    function(access_token, refresh_token, profile, done) {","","    \tconsole.log('profile', profile);","","\t\t// asynchronous","\t\tprocess.nextTick(function() {","","\t\t\t// find the user in the database based on their facebook id","\t        User.findOne({ 'id' : profile.id }, function(err, user) {","","\t        \t// if there is an error, stop everything and return that","\t        \t// ie an error connecting to the database","\t            if (err)","\t                return done(err);","","\t\t\t\t// if the user is found, then log them in","\t            if (user) {","\t                return done(null, user); // user found, return that user","\t            } else {","\t                // if there is no user found with that facebook id, create them","\t                var newUser = new User();","","\t\t\t\t\t// set all of the facebook information in our user model","\t                newUser.fb.id    = profile.id; // set the users facebook id\t                ","\t                newUser.fb.access_token = access_token; // we will save the token that facebook provides to the user\t                ","\t                newUser.fb.firstName  = profile.name.givenName;","\t                newUser.fb.lastName = profile.name.familyName; // look at the passport user profile to see how names are returned","\t                newUser.fb.email = profile.emails[0].value; // facebook can return multiple emails so we'll take the first","","\t\t\t\t\t// save our user to the database","\t                newUser.save(function(err) {","\t                    if (err)","\t                        throw err;","","\t                    // if successful, return the new user","\t                    return done(null, newUser);","\t                });","\t            }","","\t        });","        });","","    }));","","};"],"id":1}],[{"start":{"row":1,"column":30},"end":{"row":1,"column":34},"action":"remove","lines":["user"],"id":2},{"start":{"row":1,"column":30},"end":{"row":1,"column":31},"action":"insert","lines":["f"]}],[{"start":{"row":1,"column":31},"end":{"row":1,"column":32},"action":"insert","lines":["b"],"id":3}],[{"start":{"row":1,"column":32},"end":{"row":1,"column":33},"action":"insert","lines":["U"],"id":4}],[{"start":{"row":1,"column":33},"end":{"row":1,"column":34},"action":"insert","lines":["s"],"id":5}],[{"start":{"row":1,"column":34},"end":{"row":1,"column":35},"action":"insert","lines":["e"],"id":6}],[{"start":{"row":1,"column":35},"end":{"row":1,"column":36},"action":"insert","lines":["r"],"id":7}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["m"],"id":8}],[{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["o"],"id":9}],[{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["d"],"id":10}],[{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["e"],"id":11}],[{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["l"],"id":12}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"insert","lines":["s"],"id":13}],[{"start":{"row":2,"column":33},"end":{"row":2,"column":34},"action":"insert","lines":["/"],"id":14}],[{"start":{"row":36,"column":25},"end":{"row":36,"column":28},"action":"remove","lines":["fb."],"id":19}],[{"start":{"row":37,"column":27},"end":{"row":37,"column":28},"action":"remove","lines":["."],"id":20}],[{"start":{"row":37,"column":26},"end":{"row":37,"column":27},"action":"remove","lines":["b"],"id":21}],[{"start":{"row":37,"column":25},"end":{"row":37,"column":26},"action":"remove","lines":["f"],"id":22}],[{"start":{"row":38,"column":27},"end":{"row":38,"column":28},"action":"remove","lines":["."],"id":23}],[{"start":{"row":38,"column":26},"end":{"row":38,"column":27},"action":"remove","lines":["b"],"id":24}],[{"start":{"row":38,"column":25},"end":{"row":38,"column":26},"action":"remove","lines":["f"],"id":25}],[{"start":{"row":39,"column":27},"end":{"row":39,"column":28},"action":"remove","lines":["."],"id":26}],[{"start":{"row":39,"column":26},"end":{"row":39,"column":27},"action":"remove","lines":["b"],"id":27}],[{"start":{"row":39,"column":25},"end":{"row":39,"column":26},"action":"remove","lines":["f"],"id":28}],[{"start":{"row":40,"column":27},"end":{"row":40,"column":28},"action":"remove","lines":["."],"id":29}],[{"start":{"row":40,"column":26},"end":{"row":40,"column":27},"action":"remove","lines":["b"],"id":30}],[{"start":{"row":40,"column":25},"end":{"row":40,"column":26},"action":"remove","lines":["f"],"id":31}],[{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"insert","lines":["."],"id":32}],[{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"insert","lines":["."],"id":33}],[{"start":{"row":1,"column":22},"end":{"row":1,"column":23},"action":"insert","lines":["/"],"id":34}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["."],"id":35}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["/"],"id":36}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"remove","lines":["/"],"id":37}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["."],"id":38}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["/"],"id":39}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":15},"end":{"row":9,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1520288271242}